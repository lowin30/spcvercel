-- =============================================
-- AN√ÅLISIS Y LIMPIEZA DE POL√çTICAS DUPLICADAS
-- FECHA: 23 de Octubre, 2025
-- =============================================

-- =============================================
-- PASO 1: VER TODAS LAS POL√çTICAS trabajadores_tareas
-- =============================================

SELECT 
  '=== TODAS LAS POL√çTICAS trabajadores_tareas ===' as analisis,
  policyname,
  cmd,
  CASE 
    WHEN cmd = 'ALL' THEN '‚≠ê Cubre todo (SELECT, INSERT, UPDATE, DELETE)'
    WHEN cmd = 'SELECT' THEN 'üëÅÔ∏è Solo lectura'
    WHEN cmd = 'INSERT' THEN '‚ûï Solo crear'
    WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è Solo editar'
    WHEN cmd = 'DELETE' THEN 'üóëÔ∏è Solo eliminar'
  END as que_hace,
  CASE
    WHEN qual LIKE '%admin%' THEN 'üëî Admin'
    WHEN qual LIKE '%supervisor%' THEN 'üë®‚Äçüíº Supervisor'
    WHEN qual LIKE '%trabajador%' OR qual LIKE '%id_trabajador%' THEN 'üë∑ Trabajador'
    ELSE '‚ùì Otro'
  END as para_quien
FROM pg_policies
WHERE tablename = 'trabajadores_tareas'
ORDER BY 
  CASE 
    WHEN qual LIKE '%admin%' THEN 1
    WHEN qual LIKE '%supervisor%' THEN 2
    WHEN qual LIKE '%trabajador%' THEN 3
    ELSE 4
  END,
  cmd DESC;

-- =============================================
-- PASO 2: IDENTIFICAR DUPLICADOS
-- =============================================

SELECT 
  '=== DUPLICADOS DETECTADOS ===' as analisis,
  CASE
    WHEN qual LIKE '%admin%' THEN 'üëî Admin'
    WHEN qual LIKE '%supervisor%' THEN 'üë®‚Äçüíº Supervisor'
    WHEN qual LIKE '%trabajador%' THEN 'üë∑ Trabajador'
    ELSE 'Otro'
  END as rol,
  cmd,
  COUNT(*) as cantidad_politicas,
  CASE 
    WHEN COUNT(*) > 1 THEN '‚ö†Ô∏è DUPLICADO'
    ELSE '‚úÖ OK'
  END as estado
FROM pg_policies
WHERE tablename = 'trabajadores_tareas'
GROUP BY 
  CASE
    WHEN qual LIKE '%admin%' THEN 'üëî Admin'
    WHEN qual LIKE '%supervisor%' THEN 'üë®‚Äçüíº Supervisor'
    WHEN qual LIKE '%trabajador%' THEN 'üë∑ Trabajador'
    ELSE 'Otro'
  END,
  cmd
HAVING COUNT(*) > 1
ORDER BY rol, cmd;

-- =============================================
-- PASO 3: POL√çTICAS √ìPTIMAS NECESARIAS
-- =============================================

/*
CONFIGURACI√ìN √ìPTIMA (SOLO 3 POL√çTICAS):

1. Admin - TODO (ALL)
   ‚úÖ "Admin puede gestionar todas las asignaciones de trabajadores"

2. Supervisor - TODO de sus tareas (ALL)
   ‚úÖ "Supervisores pueden gestionar asignaciones de trabajadores en sus tareas"

3. Trabajador - Ver sus asignaciones (SELECT)
   ‚úÖ "Trabajadores pueden ver sus asignaciones de tareas"

TOTAL: 3 pol√≠ticas cubren todos los casos
*/

-- =============================================
-- PASO 4: POL√çTICAS A ELIMINAR (DUPLICADAS)
-- =============================================

-- IMPORTANTE: Revisa esta lista antes de ejecutar los DROP

SELECT 
  '=== POL√çTICAS CANDIDATAS A ELIMINAR ===' as accion,
  policyname,
  cmd,
  '‚ö†Ô∏è ELIMINAR' as motivo
FROM pg_policies
WHERE tablename = 'trabajadores_tareas'
AND policyname IN (
  -- Duplicados de Admin (mantener solo 1 ALL)
  'Permitir acceso a admin', -- DUPLICADO de la otra ALL admin
  
  -- Duplicados de Supervisor (mantener solo 1 ALL)
  'Supervisores pueden ver trabajadores de sus tareas', -- CUBIERTO por ALL supervisor
  'Permitir a supervisores ver trabajadores de sus tareas', -- DUPLICADO del anterior
  'Supervisores pueden agregar trabajadores a sus tareas', -- CUBIERTO por ALL supervisor
  'Supervisores pueden eliminar trabajadores de sus tareas', -- CUBIERTO por ALL supervisor
  'Enable insert for admins and supervisors', -- DUPLICADO
  'Enable delete for admins and supervisors', -- DUPLICADO
  
  -- Duplicados de Trabajador
  'Permitir acceso a trabajadores', -- DUPLICADO (si es ALL, demasiado permisivo)
  'Enable read access for assigned workers' -- DUPLICADO del otro SELECT trabajador
);

-- =============================================
-- PASO 5: SCRIPT DE LIMPIEZA (NO EJECUTAR A√öN)
-- =============================================

/*
-- ‚ö†Ô∏è REVISAR ANTES DE EJECUTAR ‚ö†Ô∏è
-- Eliminar pol√≠ticas duplicadas/redundantes

-- ADMIN: Eliminar duplicado (mantener "Admin puede gestionar...")
DROP POLICY IF EXISTS "Permitir acceso a admin" ON trabajadores_tareas;

-- SUPERVISOR: Eliminar espec√≠ficas (cubiertas por ALL)
DROP POLICY IF EXISTS "Supervisores pueden ver trabajadores de sus tareas" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Permitir a supervisores ver trabajadores de sus tareas" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Supervisores pueden agregar trabajadores a sus tareas" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Supervisores pueden eliminar trabajadores de sus tareas" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Enable insert for admins and supervisors" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Enable delete for admins and supervisors" ON trabajadores_tareas;

-- TRABAJADOR: Eliminar duplicados (mantener solo SELECT)
DROP POLICY IF EXISTS "Permitir acceso a trabajadores" ON trabajadores_tareas;
DROP POLICY IF EXISTS "Enable read access for assigned workers" ON trabajadores_tareas;

*/

-- =============================================
-- PASO 6: VERIFICAR DESPU√âS DE LIMPIAR
-- =============================================

-- Ejecutar despu√©s de DROP para confirmar que quedaron solo 3-4 pol√≠ticas

SELECT 
  '=== POL√çTICAS FINALES (DESPU√âS DE LIMPIEZA) ===' as resultado,
  policyname,
  cmd,
  CASE
    WHEN qual LIKE '%admin%' THEN 'üëî Admin'
    WHEN qual LIKE '%supervisor%' THEN 'üë®‚Äçüíº Supervisor'
    WHEN qual LIKE '%trabajador%' THEN 'üë∑ Trabajador'
    ELSE 'Otro'
  END as rol
FROM pg_policies
WHERE tablename = 'trabajadores_tareas'
ORDER BY rol, cmd DESC;

SELECT 
  '=== CONTEO FINAL ===' as resultado,
  COUNT(*) as total_politicas,
  CASE 
    WHEN COUNT(*) <= 4 THEN '‚úÖ √ìPTIMO'
    WHEN COUNT(*) <= 6 THEN '‚ö†Ô∏è Aceptable pero mejorable'
    ELSE '‚ùå Demasiadas pol√≠ticas'
  END as evaluacion
FROM pg_policies
WHERE tablename = 'trabajadores_tareas';

-- =============================================
-- EXPLICACI√ìN: ¬øPOR QU√â DUPLICADAS?
-- =============================================

/*
RAZONES COMUNES:

1. Scripts ejecutados m√∫ltiples veces
   - Algunos scripts no ten√≠an IF NOT EXISTS
   - Se ejecutaron en diferentes sesiones

2. Correcciones sucesivas
   - Se crearon nuevas pol√≠ticas sin eliminar las viejas
   - Nombres en ingl√©s ‚Üí espa√±ol ‚Üí descriptivos

3. Pol√≠ticas espec√≠ficas innecesarias
   - Si tienes ALL, no necesitas SELECT, INSERT, DELETE separados
   - Pero algunos scripts las crean "por precauci√≥n"

4. Migraciones del sistema
   - El sistema evolucion√≥
   - Pol√≠ticas temporales se volvieron permanentes
   - Nunca se limpiaron las viejas

IMPACTO:
- ‚úÖ NO afecta funcionalidad (RLS usa OR, cualquier pol√≠tica que permita = permitido)
- ‚ö†Ô∏è Leve impacto en performance (m√°s pol√≠ticas = m√°s evaluaciones)
- üßπ Mejora legibilidad y mantenimiento

RECOMENDACI√ìN:
- Revisar lista de candidatas a eliminar
- Hacer backup de pol√≠ticas actuales
- Ejecutar limpieza
- Verificar que todo siga funcionando
*/

-- =============================================
-- BACKUP: GUARDAR POL√çTICAS ACTUALES
-- =============================================

-- Antes de eliminar, ejecuta esto para tener un backup:

SELECT 
  '-- BACKUP pol√≠ticas trabajadores_tareas --' as backup,
  'CREATE POLICY "' || policyname || '"' ||
  ' ON trabajadores_tareas' ||
  ' FOR ' || cmd ||
  ' TO ' || roles[1] ||
  ' USING (' || qual || ')' ||
  CASE WHEN with_check IS NOT NULL THEN ' WITH CHECK (' || with_check || ')' ELSE '' END ||
  ';' as restore_command
FROM pg_policies
WHERE tablename = 'trabajadores_tareas'
ORDER BY policyname;
